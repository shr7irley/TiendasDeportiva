<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>